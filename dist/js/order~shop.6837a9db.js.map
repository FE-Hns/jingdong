{"version":3,"sources":["webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./src/utils/common.ts","webpack:///./node_modules/numeral/numeral.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js"],"names":["global","DOMIterables","forEach","createNonEnumerableProperty","COLLECTION_NAME","Collection","CollectionPrototype","prototype","error","$forEach","arrayMethodIsStrict","STRICT_METHOD","module","exports","callbackfn","this","arguments","length","undefined","fails","wellKnownSymbol","V8_VERSION","SPECIES","METHOD_NAME","array","constructor","foo","Boolean","formatNumTwo","val","format","factory","numeral","_","VERSION","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","number","_input","_value","value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","regexps","unformat","match","stringToNumber","Number","version","obj","numberToFormat","roundingFunction","abbrForce","abs","int","precision","signed","thousands","output","locale","negP","optDec","leadingCount","abbr","trillion","billion","million","thousand","decimal","neg","Math","includes","indexOf","RegExp","abbreviations","toString","split","toFixed","delimiters","slice","String","i","string","abbreviation","stringOriginal","currency","symbol","pow","min","search","insert","subString","start","reduce","callback","TypeError","t","Object","len","k","multiplier","x","parts","correctionFactor","args","Array","call","accum","next","mn","maxDecimals","optionals","boundedPrecision","optionalsRegExp","power","splitValue","minDecimals","max","key","toLowerCase","localeData","Error","reset","property","register","type","name","validate","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","console","warn","trim","e","substr","fn","clone","inputString","formatFunction","round","set","add","corrFactor","cback","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","space","splice","join","base","suffixes","binary","allSuffixes","concat","filter","item","unformatRegex","bytes","suffix","bytesMultiplier","symbols","before","after","exponential","toExponential","num","hours","floor","minutes","seconds","timeArray","toPrimitive","definePropertyModule","createPropertyDescriptor","object","propertyKey","f","$","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","SPECIES_SUPPORT","isConcatSpreadable","spreadable","FORCED","target","proto","forced","arg","E","A","n","argument","method"],"mappings":"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","file":"js/order~shop.6837a9db.js","sourcesContent":["var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n} : [].forEach;\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","import numeral from \"numeral\";\n\nexport const formatNumTwo = (val: any) => {\n  return numeral(val).format(\"0.00\");\n};\n\nexport default {\n  formatNumTwo,\n};\n","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n"],"sourceRoot":""}